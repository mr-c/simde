name: CI

on:
  push:
    branches-ignore:
      - 'master'
      - 'ci/**'
      - '!ci/gha**'
  pull_request:
    branches:
      - 'master'

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

jobs:

  clang-qemu:
    strategy:
      matrix:
        include:
        - version: 15
          cross: armv7
          arch_deb: armhf
          arch_gnu_abi: eabihf
          arch_gnu: arm
          distro: ubuntu-22.04
        - version: 15
          cross: aarch64
          arch_gnu: aarch64
          arch_deb: arm64
          distro: ubuntu-22.04
        # - version: 15
        #   cross: armel
        #   arch_gnu_abi: eabi
        #   arch_deb: armel
        #   arch_gnu: arm
        #   distro: ubuntu-22.04
        # - version: 15
        #   cross: riscv64
        #   arch_gnu: riscv64
        #   arch_deb: riscv64
        #   distro: ubuntu-22.04
        # - version: 15
        #   cross: s390x
        #   arch_gnu: s390x
        #   arch_deb: s390x
        #   distro: ubuntu-22.04
        - version: 15
          cross: ppc64el
          arch_deb: ppc64el
          arch_gnu: powerpc64le
          distro: ubuntu-22.04
    runs-on: ${{ matrix.distro }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: sudo apt-get update
    - name: CPU Information
      run: cat /proc/cpuinfo
    - name: Install APT Dependencies
      run: |
        sudo add-apt-repository ppa:savoury1/virtualisation
        sudo apt-get update -y
        sudo apt-get -yq install ninja-build parallel \
          binfmt-support clang-${{ matrix.version }} clang++-${{ matrix.version }} \
          qemu-user-static python3-pip libc6-${{ matrix.arch_deb }}-cross libstdc++-12-dev-${{ matrix.arch_deb }}-cross \
          binutils-${{ matrix.arch_gnu }}-linux-gnu${{ matrix.arch_gnu_abi }}
        sudo python3 -m pip install meson==0.55.0
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ github.job }}-${{ matrix.distro }}-${{ matrix.cross }}
    - name: add ccache to the build path
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
    - name: Configure
      run: meson setup --cross-file=docker/cross-files/${{ matrix.cross }}-clang-${{ matrix.version }}-ccache.cross build
    - name: Build
      run: ninja -C build -v
    - name: Test
      run: meson test -C build --print-errorlogs --print-errorlogs $(meson test -C build --list | grep -v emul)


