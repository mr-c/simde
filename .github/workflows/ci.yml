name: CI

on:
  push:
    branches-ignore:
      - 'ci/**'
      - '!ci/gha**'
      - 'dependabot/**'
  pull_request:
    branches:
      - 'master'

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  gcc:
    strategy:
      fail-fast: false
      matrix:
        include:
        - version: 11
          distro:  ubuntu-24.04-arm
          arch_flags: -march=native
        - version: 11
          distro: ubuntu-24.04-arm
          arch_flags: -ffast-math
          ccache: 'true'
        - version: 12
          distro: ubuntu-24.04-arm
          arch_flags: -march=native
        - version: 12
          distro: ubuntu-24.04-arm
          arch_flags: -ffast-math
          ccache: 'true'
        - version: 13
          distro: ubuntu-24.04-arm
          arch_flags: -march=native
        - version: 13
          distro: ubuntu-24.04-arm
          arch_flags: -ffast-math
          ccache: 'true'
        - version: 14
          distro: ubuntu-24.04-arm
          arch_flags: -march=native
        - version: 14
          distro: ubuntu-24.04-arm
          arch_flags: -ffast-math
          ccache: 'true'
    runs-on: ${{ matrix.distro }}
    env:
      CFLAGS: ${{ matrix.arch_flags }} -Wall -Wextra -Werror
      CXXFLAGS: ${{ matrix.arch_flags }} -Wall -Wextra -Werror
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: CPU Information
      run: cat /proc/cpuinfo
    - name: Install APT Dependencies
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
        sudo apt-get update
        sudo apt-get -y install --no-install-recommends gcovr pipx ninja-build gcc-${{ matrix.version }} g++-${{ matrix.version }}
        sudo apt-get -y purge g++ gcc
        pipx install meson==0.55.1
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      if: ${{ matrix.ccache == 'true' }}
      with:
        key: ${{ github.job }}-${{ matrix.version }}-${{ matrix.distro }}-${{ matrix.arch_flags }}
    - name: add ccache to the build path
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        sudo ln -s /usr/bin/gcc-${{ matrix.version }} /usr/bin/gcc
        sudo ln -s /usr/bin/g++-${{ matrix.version }} /usr/bin/g++
        sudo ln -s /usr/bin/gcov-${{ matrix.version }} /usr/bin/gcov
    - name: Configure
      run: meson setup build
    - name: Build
      run: meson compile -C build --verbose
    - name: Test
      run: meson test -C build --print-errorlogs $(meson test -C build --list | grep -v emul)

  clang:
    strategy:
      fail-fast: false
      matrix:
        include:
        - version: "14"
          distro: ubuntu-24.04-arm
          arch_flags: -march=armv8-a+fp+aes+sha2+sha3+sm4+sve+flagm+ssbs+sb+sve2+i8mm+bf16
          # grep Features < /proc/cpuinfo | head -n 1 | awk '-F: ' '{print $2}' | sed 's/asimd //;s/evtstrm //;s/pmull //;s/sha1 //;s/crc32 //;s/atomics //;s/fphp //;s/asimd.. //g;s/cpuid //;s/asimd... //g;s/jscvt //;s/fcma //;s/lrcpc //;s/dcpop //;s/sm3 //;s/sha512 //;s/uscat //;s/ilrcpc //;s/pac. //g;s/dcpodp //;s/sveaes //;s/svebitperm //;s/svesha3 //;s/svesm4 //;s/flagm2 //;s/frint //;s/svei8mm //;s/svebf16 //' | tr ' ' '+'
        - version: "14"
          distro: ubuntu-24.04-arm
          arch_flags: -ffast-math
          ccache: 'true'
        - version: "15"
          distro: ubuntu-24.04-arm
          arch_flags: -march=native
        - version: "15"
          distro: ubuntu-24.04-arm
          arch_flags: -ffast-math
          ccache: 'true'
        - version: "16"
          distro: ubuntu-24.04-arm
          arch_flags: -march=native -Wno-unsafe-buffer-usage
        - version: "16"
          distro: ubuntu-24.04-arm
          arch_flags: -ffast-math -Wno-unsafe-buffer-usage
          ccache: 'true'
        - version: "17"
          distro: ubuntu-24.04-arm
          arch_flags: -march=native -Wno-unsafe-buffer-usage
        - version: "17"
          distro: ubuntu-24.04-arm
          arch_flags: -ffast-math -Wno-unsafe-buffer-usage
          ccache: 'true'
        - version: "17"
          distro: ubuntu-24.04-arm
          arch_flags: -march=native -Wno-unsafe-buffer-usage -O2
        - version: "18"
          distro: ubuntu-24.04-arm
          arch_flags: -march=native -Wno-unsafe-buffer-usage -Wno-switch-default
        - version: "18"
          distro: ubuntu-24.04-arm
          arch_flags: -ffast-math -Wno-unsafe-buffer-usage -Wno-switch-default -Wno-nan-infinity-disabled
          ccache: 'true'
        - version: "18"
          distro: ubuntu-24.04-arm
          arch_flags: -march=native -Wno-unsafe-buffer-usage -Wno-switch-default -O2
    runs-on: ${{ matrix.distro }}
    env:
      CFLAGS: ${{ matrix.arch_flags }} -Wall -Weverything -Werror -fno-lax-vector-conversions
      CXXFLAGS: ${{ matrix.arch_flags }} -Wall -Weverything -Werror -fno-lax-vector-conversions
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: CPU Information
      run: cat /proc/cpuinfo
    - name: Install PPAs
      if: ${{ matrix.distro == 'ubuntu-22.04' }}
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo add-apt-repository ppa:savoury1/build-tools
        sudo add-apt-repository ppa:savoury1/display
        sudo add-apt-repository ppa:savoury1/llvm-defaults-16
    - name: Install APT Dependencies
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
        sudo apt-get update
        sudo apt-get -y --no-install-recommends install gcovr ninja-build pipx \
          clang-${{ matrix.version }}
        pipx install meson==0.55.1
        sudo rm /usr/bin/gcc /usr/bin/g++ /usr/bin/cc /usr/bin/c++
        sudo ln -s $(command -v clang-${{ matrix.version }}) /usr/bin/cc
        sudo ln -s $(command -v clang-${{ matrix.version }}) /usr/bin/c++
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      if: ${{ matrix.ccache == 'true' }}
      with:
        key: ${{ github.job }}-${{ matrix.version }}-${{ matrix.distro }}-${{ matrix.arch_flags }}
    - name: add ccache to the build path
      if: ${{ matrix.ccache == 'true' }}
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
    - name: Configure
      run: meson setup build || (cat build/meson-logs/meson-log.txt ; false)
    - name: Build
      run: meson compile -C build --verbose
    - name: Test
      run: meson test -C build --print-errorlogs $(meson test -C build --list | grep -v emul)
